BEGIN PROGRAM TugasAkhir

// Global Variables
DECLARE ArrayList noPelanggan, namaPelanggan, alamatPelanggan
DECLARE ArrayList kodeMotor, hargaPokok, angsuran, jumlahDp, totalBunga
DECLARE boolean isRunning = true

PROCEDURE main()
    DISPLAY "TUGAS AKHIR PROGRAM LEASING MOTOR"
    DISPLAY "RAFFI DWI LAKSONO    24.240.0077"
    
    WHILE isRunning
        CALL showMenu()
    END WHILE
END PROCEDURE

PROCEDURE showMenu()
    DISPLAY "====== MENU ======"
    DISPLAY "1. Lihat Data Pelanggan"
    DISPLAY "2. Tambah Data Pelanggan"
    DISPLAY "3. Edit Data Pelanggan"
    DISPLAY "4. Hapus Data Pelanggan"
    DISPLAY "5. Keluar"
    
    INPUT selectedMenu
    
    SWITCH selectedMenu
        CASE 1: CALL showAllPelanggan()
        CASE 2: CALL inputPelanggan()
        CASE 3: CALL editPelanggan()
        CASE 4: CALL deletePelanggan()
        CASE 5: 
            SET isRunning = false
            DISPLAY "Program dihentikan. Terima kasih!"
        DEFAULT: DISPLAY "Menu tidak valid!"
    END SWITCH
END PROCEDURE

PROCEDURE showAllPelanggan()
    SET recordsPerPage = 3
    SET page = 1
    SET totalPages = CEILING(noPelanggan.size / recordsPerPage)
    
    WHILE true
        DISPLAY "LAPORAN LEASING MOTOR JAYA ABADI"
        DISPLAY "DATA PELANGGAN"
        DISPLAY "Hal " + page
        
        IF noPelanggan is EMPTY THEN
            DISPLAY "Data Pelanggan Tidak tersedia!"
            RETURN
        END IF
        
        SET totalBayar = 0
        DISPLAY table header
        
        FOR i = (page-1) * recordsPerPage TO MIN(page * recordsPerPage, noPelanggan.size)
            CALCULATE totalHarga = hargaPokok[i] - jumlahDp[i]
            CALCULATE perBulan = totalHarga / angsuran[i]
            CALCULATE totalAngsuran = perBulan + perBulan * totalBunga[i]
            ADD totalAngsuran TO totalBayar
            
            DISPLAY formatted row with all customer data
        END FOR
        
        DISPLAY totalBayar
        
        INPUT navigation choice (n/b/k)
        IF choice = 'n' AND page < totalPages THEN
            INCREMENT page
        ELSE IF choice = 'b' AND page > 1 THEN
            DECREMENT page
        ELSE IF choice = 'k' THEN
            BREAK
        END IF
    END WHILE
END PROCEDURE

PROCEDURE inputPelanggan()
    SET berjalan = true
    
    WHILE berjalan
        DISPLAY "======== TAMBAH DATA ========"
        DISPLAY list of available motors and prices
        
        INPUT nomor, nama, alamat, kode, dp, angsur
        SET harga = CALL getHarga(kode)
        
        CALCULATE bunga based on angsur:
            IF angsur ≤ 12 THEN bunga = 0.12
            IF 12 < angsur ≤ 24 THEN bunga = 0.24
            IF angsur > 24 THEN bunga = 0.36
        
        ADD all inputs to respective ArrayLists
        
        DISPLAY "Data berhasil ditambahkan ke database!"
        
        INPUT "Mau nambah data lagi ndak? (y/t)"
        IF input ≠ "y" THEN
            SET berjalan = false
        END IF
    END WHILE
END PROCEDURE

PROCEDURE editPelanggan()
    DISPLAY "======== EDIT DATA ========"
    CALL showAllPelanggan()
    
    INPUT index to edit
    
    IF index is valid THEN
        DISPLAY list of available motors
        INPUT new customer data
        UPDATE all ArrayLists at index with new data
        DISPLAY "Data berhasil diubah!"
    ELSE
        DISPLAY "Data tidak ada dalam database!"
    END IF
END PROCEDURE

PROCEDURE deletePelanggan()
    DISPLAY "======== HAPUS DATA ========"
    CALL showAllPelanggan()
    
    INPUT index to delete
    
    IF index is valid THEN
        REMOVE elements at index from all ArrayLists
        DISPLAY "Data berhasil dihapus!"
    ELSE
        DISPLAY "Data tidak ada dalam database!"
    END IF
END PROCEDURE

FUNCTION getHarga(kode)
    SWITCH kode
        CASE 1: RETURN 18000000
        CASE 2: RETURN 20000000
        CASE 3: RETURN 24000000
        CASE 4: RETURN 28000000
        CASE 5: RETURN 32000000
        DEFAULT: RETURN 0
    END SWITCH
END FUNCTION

FUNCTION getMotor(kode)
    SWITCH kode
        CASE 1: RETURN "MIO M3"
        CASE 2: RETURN "FINO PREMIUM"
        CASE 3: RETURN "FAZZIO HYBRID LUX"
        CASE 4: RETURN "AEROX STANDAR"
        CASE 5: RETURN "NMAX NEO STANDAR"
        DEFAULT: RETURN "pilihan tidak tersedia"
    END SWITCH
END FUNCTION

END PROGRAM
